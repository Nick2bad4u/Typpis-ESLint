import { execSync } from "node:child_process";

const packages = [
    "@arthurgeron/eslint-plugin-react-usememo",
    "@docusaurus/eslint-plugin",
    "@eslint-community/eslint-plugin-eslint-comments",
    "@eslint-react/eslint-plugin",
    "@eslint/compat",
    "@eslint/css",
    "@eslint/js",
    "@eslint/json",
    "@eslint/markdown",
    "@html-eslint/eslint-plugin",
    "@html-eslint/parser",
    "@jcoreio/eslint-plugin-implicit-dependencies",
    "@metamask/eslint-plugin-design-tokens",
    "@microsoft/eslint-plugin-sdl",
    "@rushstack/eslint-plugin-security",
    "@typescript-eslint/eslint-plugin",
    "@typescript-eslint/parser",
    "@typescript-eslint/utils",
    "@vitest/eslint-plugin",
    "eslint",
    "eslint-config-flat-gitignore",
    "eslint-config-prettier",
    "eslint-import-resolver-typescript",
    "eslint-mdx",
    "eslint-plugin-antfu",
    "eslint-plugin-array-func",
    "eslint-plugin-better-tailwindcss",
    "eslint-plugin-boundaries",
    "eslint-plugin-canonical",
    "eslint-plugin-clean-code",
    "eslint-plugin-clean-timer",
    "eslint-plugin-comment-length",
    "eslint-plugin-compat",
    "eslint-plugin-css-modules",
    "eslint-plugin-depend",
    "eslint-plugin-deprecation",
    "eslint-plugin-etc",
    "eslint-plugin-exception-handling",
    "eslint-plugin-file-progress",
    "eslint-plugin-filename-export",
    "eslint-plugin-format-sql",
    "eslint-plugin-function-name",
    "eslint-plugin-functional",
    "eslint-plugin-goodeffects",
    "eslint-plugin-granular-selectors",
    "eslint-plugin-import-x",
    "eslint-plugin-import-zod",
    "eslint-plugin-istanbul",
    "eslint-plugin-json-schema-validator",
    "eslint-plugin-jsonc",
    "eslint-plugin-jsx-a11y",
    "eslint-plugin-jsx-plus",
    "eslint-plugin-listeners",
    "eslint-plugin-loadable-imports",
    "eslint-plugin-math",
    "eslint-plugin-mdx",
    "eslint-plugin-module-interop",
    "eslint-plugin-n",
    "eslint-plugin-neverthrow",
    "eslint-plugin-nitpick",
    "eslint-plugin-no-barrel-files",
    "eslint-plugin-no-constructor-bind",
    "eslint-plugin-no-explicit-type-exports",
    "eslint-plugin-no-function-declare-after-return",
    "eslint-plugin-no-hardcoded-strings",
    "eslint-plugin-no-lookahead-lookbehind-regexp",
    "eslint-plugin-no-only-tests",
    "eslint-plugin-no-secrets",
    "eslint-plugin-no-unary-plus",
    "eslint-plugin-no-unawaited-dot-catch-throw",
    "eslint-plugin-no-unsanitized",
    "eslint-plugin-no-use-extend-native",
    "eslint-plugin-observers",
    "eslint-plugin-package-json",
    "eslint-plugin-paths",
    "eslint-plugin-perfectionist",
    "eslint-plugin-playwright",
    "eslint-plugin-prefer-arrow",
    "eslint-plugin-prettier",
    "eslint-plugin-promise",
    "eslint-plugin-react",
    "eslint-plugin-react-compiler",
    "eslint-plugin-react-dom",
    "eslint-plugin-react-form-fields",
    "eslint-plugin-react-hook-form",
    "eslint-plugin-react-hooks",
    "eslint-plugin-react-hooks-addons",
    "eslint-plugin-react-hooks-extra",
    "eslint-plugin-react-naming-convention",
    "eslint-plugin-react-perf",
    "eslint-plugin-react-prefer-function-component",
    "eslint-plugin-react-refresh",
    "eslint-plugin-react-require-testid",
    "eslint-plugin-react-useeffect",
    "eslint-plugin-react-web-api",
    "eslint-plugin-redos",
    "eslint-plugin-regexp",
    "eslint-plugin-require-jsdoc",
    "eslint-plugin-safe-jsx",
    "eslint-plugin-security",
    "eslint-plugin-sonarjs",
    "eslint-plugin-sort-class-members",
    "eslint-plugin-sort-destructure-keys",
    "eslint-plugin-sort-keys-fix",
    "eslint-plugin-sort-react-dependency-arrays",
    "eslint-plugin-sql-template",
    "eslint-plugin-ssr-friendly",
    "eslint-plugin-storybook",
    "eslint-plugin-styled-components-a11y",
    "eslint-plugin-switch-case",
    "eslint-plugin-tailwindcss",
    "eslint-plugin-testing-library",
    "eslint-plugin-toml",
    "eslint-plugin-toplevel",
    "eslint-plugin-total-functions",
    "eslint-plugin-tsdoc",
    "eslint-plugin-undefined-css-classes",
    "eslint-plugin-unicorn",
    "eslint-plugin-unused-imports",
    "eslint-plugin-usememo-recommendations",
    "eslint-plugin-validate-jsx-nesting",
    "eslint-plugin-write-good-comments",
    "eslint-plugin-xss",
    "eslint-plugin-yml",
    "eslint-plugin-zod",
    "globals",
    "jsonc-eslint-parser",
    "prettier",
    "toml-eslint-parser",
    "typescript",
    "yaml-eslint-parser"
];

for (const pkg of packages) {
    try {
        const version = execSync(`npm view ${pkg} version`, { stdio: ["ignore", "pipe", "pipe"] })
            .toString()
            .trim();
        console.log(`${pkg}@${version}`);
    } catch (error) {
        const stderr = error && typeof error === "object" && "stderr" in error ? error.stderr : undefined;
        const message = stderr ? String(stderr).trim() : error instanceof Error ? error.message : String(error);
        console.error(`Failed to fetch ${pkg}: ${message}`);
        process.exitCode = 1;
    }
}
